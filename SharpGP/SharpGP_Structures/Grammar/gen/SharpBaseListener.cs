//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/cl3v3/Documents/GitHub/ProgramowanieGenetyczne/SharpGP/SharpGP_Structures/Grammar\Sharp.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISharpListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SharpBaseListener : ISharpListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] SharpParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] SharpParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.action"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAction([NotNull] SharpParser.ActionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.action"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAction([NotNull] SharpParser.ActionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScope([NotNull] SharpParser.ScopeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScope([NotNull] SharpParser.ScopeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop([NotNull] SharpParser.LoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop([NotNull] SharpParser.LoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRead([NotNull] SharpParser.ReadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRead([NotNull] SharpParser.ReadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.write"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWrite([NotNull] SharpParser.WriteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.write"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWrite([NotNull] SharpParser.WriteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] SharpParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] SharpParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] SharpParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] SharpParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] SharpParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] SharpParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] SharpParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] SharpParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SharpParser.nestedExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNestedExp([NotNull] SharpParser.NestedExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SharpParser.nestedExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNestedExp([NotNull] SharpParser.NestedExpContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
