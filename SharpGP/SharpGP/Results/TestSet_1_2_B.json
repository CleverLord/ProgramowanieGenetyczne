{
  "generations": [
    {
      "generationIndex": -1,
      "generationStartTime": "24/01/23 16:09:02.435",
      "generationCreationTime": 25,
      "generationEvaluationTime": 5770,
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        600.0,
        800.0,
        900.0,
        900.0,
        1000.0,
        1000.0,
        1300.0,
        1400.0,
        1600.0,
        1600.0,
        2300.0,
        2300.0,
        2300.0,
        2400.0,
        5900.0,
        11900.0,
        19700.0,
        25100.0,
        25900.0,
        28900.0,
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 3,
        "100": 8,
        "600": 1,
        "800": 1,
        "900": 2,
        "1000": 2,
        "1300": 1,
        "1400": 1,
        "1600": 2,
        "2300": 3,
        "2400": 1,
        "5900": 1,
        "11900": 1,
        "19700": 1,
        "25100": 1,
        "25900": 1,
        "28900": 1,
        "Infinity": 69
      },
      "populationDepths": [
        7,
        7,
        7,
        8,
        9,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12
      ],
      "popDepthToUnits": {
        "7": 3,
        "8": 1,
        "9": 1,
        "10": 19,
        "11": 35,
        "12": 41
      },
      "actions": [],
      "actionsToCount": {},
      "bestProgram": " loop 13 {\n   x_0 = (read() + (24 / (x_0 * 8)));\n   loop 7 {\n     loop 5 {\n       if (0 != 3){\n         write(1);\n       }\n     }\n   }\n   write((((15 - 23) * 5) - read()));\n }\n loop 12 {\n   x_0 = (4 * (15 + (22 / x_0)));\n   x_0 = (((20 / read()) * x_1) - read());\n }\n if (x_0 < 2){\n   loop 22 {\n     loop 15 {\n       x_1 = (x_2 - 18);\n     }\n   }\n   loop 8 {\n     loop 4 {\n       x_0 = (x_2 - 24);\n     }\n     loop 2 {\n       loop 12 {\n         loop 18 {\n         }\n       }\n     }\n   }\n }\n loop 8 {\n   if (21 != x_1){\n     x_3 = (1 - (0 - 22));\n   }\n   if (7 > 12){\n     loop 15 {\n       loop 13 {\n         x_3 = x_2;\n       }\n     }\n   }\n }\n loop 22 {\n   if (9 <= 20){\n     loop 15 {\n       loop 17 {\n         if (read() > x_4){\n         }\n       }\n     }\n   }\n   loop 7 {\n     loop 7 {\n       loop 0 {\n         x_4 = 4;\n       }\n     }\n   }\n }\n"
    },
    {
      "generationIndex": 0,
      "generationStartTime": "24/01/23 16:09:08.232",
      "generationCreationTime": 6,
      "generationEvaluationTime": 20906,
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        200.0,
        600.0,
        600.0,
        800.0,
        800.0,
        900.0,
        1000.0,
        1000.0,
        1000.0,
        1000.0,
        1300.0,
        1300.0,
        1300.0,
        1300.0,
        1300.0,
        1600.0,
        1600.0,
        1600.0,
        1600.0,
        2000.0,
        2300.0,
        2300.0,
        2300.0,
        2300.0,
        2300.0,
        2400.0,
        3100.0,
        4100.0,
        4700.0,
        5900.0,
        5900.0,
        10300.0,
        11900.0,
        11900.0,
        19700.0,
        19700.0,
        25900.0,
        25900.0,
        81800.0,
        486100.0,
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 18,
        "100": 16,
        "200": 1,
        "600": 2,
        "800": 2,
        "900": 1,
        "1000": 4,
        "1300": 5,
        "1600": 4,
        "2000": 1,
        "2300": 5,
        "2400": 1,
        "3100": 1,
        "4100": 1,
        "4700": 1,
        "5900": 2,
        "10300": 1,
        "11900": 2,
        "19700": 2,
        "25900": 2,
        "81800": 1,
        "486100": 1,
        "Infinity": 26
      },
      "populationDepths": [
        7,
        9,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        15,
        16,
        17,
        20
      ],
      "popDepthToUnits": {
        "7": 1,
        "9": 1,
        "10": 14,
        "11": 35,
        "12": 44,
        "13": 1,
        "15": 1,
        "16": 1,
        "17": 1,
        "20": 1
      },
      "actions": [
        {
          "count": 3,
          "actionType": "CopyZero"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 7,
          "parent2Depth": 10,
          "child1Depth": 7,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 10,
          "parent2Depth": 10,
          "child1Depth": 10,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 17,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 10,
          "child1Depth": 11,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 10,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 10,
          "child1Depth": 11,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 20,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 16,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 10,
          "parent2Depth": 11,
          "child1Depth": 10,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Comparator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 15,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    },
    {
      "generationIndex": 1,
      "generationStartTime": "24/01/23 16:09:29.145",
      "generationCreationTime": 16,
      "generationEvaluationTime": 63819,
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        600.0,
        600.0,
        800.0,
        800.0,
        1000.0,
        1000.0,
        1000.0,
        1300.0,
        1300.0,
        1600.0,
        1600.0,
        1600.0,
        2300.0,
        4100.0,
        4100.0,
        5900.0,
        10300.0,
        36300.0,
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 63,
        "100": 16,
        "600": 2,
        "800": 2,
        "1000": 3,
        "1300": 2,
        "1600": 3,
        "2300": 1,
        "4100": 2,
        "5900": 1,
        "10300": 1,
        "36300": 1,
        "Infinity": 3
      },
      "populationDepths": [
        9,
        9,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        13,
        13,
        14,
        14,
        15,
        16,
        16,
        16,
        18
      ],
      "popDepthToUnits": {
        "9": 2,
        "10": 1,
        "11": 31,
        "12": 56,
        "13": 3,
        "14": 2,
        "15": 1,
        "16": 3,
        "18": 1
      },
      "actions": [
        {
          "count": 18,
          "actionType": "CopyZero"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 15,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 13,
          "child1Depth": 12,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 13,
          "parent2Depth": 12,
          "child1Depth": 13,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 14,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 13,
          "parent2Depth": 16,
          "child1Depth": 16,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 16,
          "parent2Depth": 12,
          "child1Depth": 16,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Comparator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Comparator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 16,
          "child1Depth": 12,
          "child2Depth": 16,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 13,
          "parent2Depth": 12,
          "child1Depth": 14,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 18,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Scope",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    },
    {
      "generationIndex": 2,
      "generationStartTime": "24/01/23 16:10:32.981",
      "generationCreationTime": 4,
      "generationEvaluationTime": 82604,
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        100.0,
        100.0,
        100.0,
        600.0
      ],
      "fitnesToUnits": {
        "0": 97,
        "100": 3,
        "600": 1
      },
      "populationDepths": [
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        13,
        13,
        13,
        14,
        15,
        16
      ],
      "popDepthToUnits": {
        "11": 32,
        "12": 62,
        "13": 4,
        "14": 1,
        "15": 1,
        "16": 1
      },
      "actions": [
        {
          "count": 63,
          "actionType": "CopyZero"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 13,
          "child1Depth": 12,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    }
  ],
  "totalEvolutionTime": "0:02:53.1567139",
  "totalActionsToCount": {}
}