{
  "generations": [
    {
      "generationIndex": -1,
      "generationStartTime": "24/01/23 16:11:55.593",
      "generationCreationTime": 28,
      "generationEvaluationTime": 22339,
      "fitnesses": [
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        200.0,
        300.0,
        400.0,
        400.0,
        500.0,
        500.0,
        500.0,
        500.0,
        700.0,
        700.0,
        700.0,
        800.0,
        900.0,
        1000.0,
        1300.0,
        1400.0,
        1800.0,
        2200.0,
        3000.0,
        4300.0,
        12700.0,
        14500.0,
        40700.0,
        225300.0,
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "100": 14,
        "200": 1,
        "300": 1,
        "400": 2,
        "500": 4,
        "700": 3,
        "800": 1,
        "900": 1,
        "1000": 1,
        "1300": 1,
        "1400": 1,
        "1800": 1,
        "2200": 1,
        "3000": 1,
        "4300": 1,
        "12700": 1,
        "14500": 1,
        "40700": 1,
        "225300": 1,
        "Infinity": 62
      },
      "populationDepths": [
        7,
        7,
        7,
        7,
        7,
        8,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12
      ],
      "popDepthToUnits": {
        "7": 5,
        "8": 1,
        "9": 7,
        "10": 9,
        "11": 29,
        "12": 49
      },
      "actions": [],
      "actionsToCount": {},
      "bestProgram": " loop 2 {\n   loop 8 {\n     loop 25 {\n       x_1 = (x_1 * 3);\n     }\n   }\n   if (1 == read()){\n     loop 22 {\n       x_1 = (15 * x_1);\n     }\n   }\n }\n x_0 = (x_2 + ((x_1 * (6 * 24)) * 22));\n loop 5 {\n   if (1 >= read()){\n     loop 22 {\n       loop 22 {\n         if (x_2 > x_1){\n         }\n       }\n     }\n     loop 22 {\n       write((x_3 * 13));\n     }\n     write(((0 + x_0) - 3));\n   }\n }\n loop 10 {\n   if (5 == 23){\n     if (x_1 < 2){\n       write((18 + read()));\n     }\n   }\n   if (24 != x_6){\n     write(1);\n   }\n   if (1 != x_0){\n     x_3 = ((x_1 - 9) - 2);\n     loop 12 {\n       if (read() <= x_3){\n         if (7 < x_2){\n         }\n       }\n     }\n   }\n   loop 10 {\n     loop 20 {\n       x_5 = (5 / 18);\n     }\n   }\n }\n"
    },
    {
      "generationIndex": 0,
      "generationStartTime": "24/01/23 16:12:17.961",
      "generationCreationTime": 7,
      "generationEvaluationTime": 15763,
      "fitnesses": [
        0.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        300.0,
        300.0,
        300.0,
        400.0,
        400.0,
        400.0,
        500.0,
        500.0,
        500.0,
        500.0,
        500.0,
        500.0,
        800.0,
        800.0,
        1000.0,
        1100.0,
        1300.0,
        1400.0,
        1800.0,
        1800.0,
        2100.0,
        2200.0,
        3000.0,
        4300.0,
        4300.0,
        12700.0,
        12700.0,
        14500.0,
        14500.0,
        14500.0,
        14500.0,
        40700.0,
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 1,
        "100": 49,
        "300": 3,
        "400": 3,
        "500": 6,
        "800": 2,
        "1000": 1,
        "1100": 1,
        "1300": 1,
        "1400": 1,
        "1800": 2,
        "2100": 1,
        "2200": 1,
        "3000": 1,
        "4300": 2,
        "12700": 2,
        "14500": 4,
        "40700": 1,
        "Infinity": 19
      },
      "populationDepths": [
        5,
        7,
        7,
        7,
        7,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        9,
        9,
        9,
        9,
        9,
        9,
        10,
        10,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        13,
        13,
        14,
        14,
        15,
        15,
        15,
        17
      ],
      "popDepthToUnits": {
        "5": 1,
        "7": 4,
        "8": 7,
        "9": 6,
        "10": 6,
        "11": 19,
        "12": 49,
        "13": 3,
        "14": 2,
        "15": 3,
        "17": 1
      },
      "actions": [
        {
          "count": 0,
          "actionType": "CopyZero"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "mutatedGene": "PRogram",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 9,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Comparator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 10,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 15,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 15,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 8,
          "child1Depth": 13,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 7,
          "child1Depth": 15,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "mutatedGene": "Constant",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 9,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 10,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 13,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 7,
          "child1Depth": 12,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 10,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 14,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 7,
          "parent2Depth": 9,
          "child1Depth": 5,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "PRogram",
          "actionType": "Mutation"
        },
        {
          "mutatedGene": "Constant",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 8,
          "child1Depth": 12,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 7,
          "child1Depth": 12,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 7,
          "parent2Depth": 11,
          "child1Depth": 7,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 17,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 14,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 10,
          "child1Depth": 8,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 10,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 12,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    },
    {
      "generationIndex": 1,
      "generationStartTime": "24/01/23 16:12:33.733",
      "generationCreationTime": 10,
      "generationEvaluationTime": 16590,
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        400.0,
        500.0,
        1300.0,
        1400.0,
        4300.0,
        14500.0,
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 4,
        "100": 82,
        "400": 1,
        "500": 1,
        "1300": 1,
        "1400": 1,
        "4300": 1,
        "14500": 1,
        "Infinity": 9
      },
      "populationDepths": [
        7,
        7,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        9,
        9,
        9,
        9,
        9,
        9,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        13,
        14,
        14,
        14,
        14,
        15,
        15,
        15,
        15,
        15,
        17,
        17
      ],
      "popDepthToUnits": {
        "7": 2,
        "8": 9,
        "9": 6,
        "10": 4,
        "11": 10,
        "12": 49,
        "13": 10,
        "14": 4,
        "15": 5,
        "17": 2
      },
      "actions": [
        {
          "count": 1,
          "actionType": "CopyZero"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "mutatedGene": "PRogram",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 10,
          "child1Depth": 11,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 8,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 8,
          "child1Depth": 12,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Comparator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Constant",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 9,
          "parent2Depth": 15,
          "child1Depth": 9,
          "child2Depth": 15,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 9,
          "child1Depth": 13,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Scope",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 13,
          "child1Depth": 12,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 9,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Comparator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 17,
          "parent2Depth": 8,
          "child1Depth": 17,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 14,
          "child1Depth": 12,
          "child2Depth": 14,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 15,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 14,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 14,
          "child1Depth": 12,
          "child2Depth": 14,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 13,
          "child1Depth": 12,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 12,
          "child1Depth": 9,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 13,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 15,
          "child1Depth": 12,
          "child2Depth": 15,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 9,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 13,
          "parent2Depth": 12,
          "child1Depth": 13,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Constant",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 15,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 17,
          "child1Depth": 12,
          "child2Depth": 17,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 14,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 15,
          "child1Depth": 8,
          "child2Depth": 15,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 13,
          "child1Depth": 12,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 13,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 11,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    }
  ],
  "totalEvolutionTime": "0:00:54.7417776",
  "totalActionsToCount": {}
}