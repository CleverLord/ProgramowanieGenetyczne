{
  "generations": [
    {
      "generationIndex": -1,
      "generationStartTime": "27/01/23 14:25:57.824",
      "generationCreationTime": -1,
      "generationEvaluationTime": 366,
      "gradingFunction": "target_1_1_D__0",
      "fitnesses": [
        0.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        2.0,
        4.0,
        4.0,
        8.0,
        8.0,
        18.0,
        26.0,
        43.0,
        511.0,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 1,
        "1": 5,
        "2": 1,
        "4": 2,
        "8": 2,
        "18": 1,
        "26": 1,
        "43": 1,
        "511": 1,
        "1.7976931348623157E+308": 38,
        "Infinity": 47
      },
      "populationDepths": [
        7,
        8,
        8,
        8,
        8,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12
      ],
      "popDepthToUnits": {
        "7": 1,
        "8": 4,
        "9": 8,
        "10": 10,
        "11": 33,
        "12": 44
      },
      "actions": [],
      "actionsToCount": {},
      "bestProgram": null
    },
    {
      "generationIndex": 0,
      "generationStartTime": "27/01/23 14:25:58.148",
      "generationCreationTime": 5,
      "generationEvaluationTime": 41,
      "gradingFunction": "target_1_1_D__0",
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        2.0,
        2.0,
        2.0,
        2.0,
        4.0,
        4.0,
        4.0,
        8.0,
        8.0,
        17.0,
        18.0,
        18.0,
        18.0,
        18.0,
        26.0,
        26.0,
        511.0,
        511.0,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 3,
        "1": 19,
        "2": 4,
        "4": 3,
        "8": 2,
        "17": 1,
        "18": 4,
        "26": 2,
        "511": 2,
        "1.7976931348623157E+308": 55,
        "Infinity": 6
      },
      "populationDepths": [
        5,
        7,
        7,
        7,
        7,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        13,
        14,
        16,
        16,
        20
      ],
      "popDepthToUnits": {
        "5": 1,
        "7": 4,
        "8": 9,
        "9": 14,
        "10": 9,
        "11": 29,
        "12": 29,
        "13": 2,
        "14": 1,
        "16": 2,
        "20": 1
      },
      "actions": [
        {
          "count": 1,
          "actionType": "CopyZero"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 10,
          "parent2Depth": 11,
          "child1Depth": 10,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 9,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 12,
          "child1Depth": 9,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 8,
          "parent2Depth": 7,
          "child1Depth": 8,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 14,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 10,
          "child1Depth": 11,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 8,
          "parent2Depth": 8,
          "child1Depth": 8,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "mutatedGene": "PRogram",
          "actionType": "Mutation"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 7,
          "child1Depth": 11,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 10,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 10,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 9,
          "parent2Depth": 10,
          "child1Depth": 9,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 8,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 9,
          "child1Depth": 12,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 11,
          "child1Depth": 10,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 10,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 10,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 20,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 10,
          "child1Depth": 16,
          "child2Depth": 5,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "PRogram",
          "actionType": "Mutation"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 9,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 8,
          "child1Depth": 12,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 9,
          "parent2Depth": 12,
          "child1Depth": 9,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 9,
          "parent2Depth": 7,
          "child1Depth": 9,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 9,
          "parent2Depth": 10,
          "child1Depth": 9,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 8,
          "parent2Depth": 10,
          "child1Depth": 8,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "PRogram",
          "actionType": "Mutation"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 16,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 11,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    },
    {
      "generationIndex": 1,
      "generationStartTime": "27/01/23 14:25:58.196",
      "generationCreationTime": 9,
      "generationEvaluationTime": 22,
      "gradingFunction": "target_1_1_D__0",
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        4.0,
        4.0,
        4.0,
        4.0,
        4.0,
        4.0,
        4.0,
        8.0,
        8.0,
        9.0,
        18.0,
        18.0,
        18.0,
        511.0,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        1.7976931348623157E+308,
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 8,
        "1": 46,
        "2": 14,
        "4": 7,
        "8": 2,
        "9": 1,
        "18": 3,
        "511": 1,
        "1.7976931348623157E+308": 15,
        "Infinity": 3
      },
      "populationDepths": [
        5,
        6,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        8,
        8,
        8,
        9,
        9,
        9,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        13,
        13,
        13,
        14,
        14,
        14,
        15,
        15,
        16,
        17,
        17,
        17,
        20,
        20,
        20,
        20,
        20
      ],
      "popDepthToUnits": {
        "5": 1,
        "6": 1,
        "7": 13,
        "8": 3,
        "9": 3,
        "10": 3,
        "11": 21,
        "12": 37,
        "13": 4,
        "14": 3,
        "15": 2,
        "16": 1,
        "17": 3,
        "20": 5
      },
      "actions": [
        {
          "count": 3,
          "actionType": "CopyZero"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 7,
          "parent2Depth": 14,
          "child1Depth": 7,
          "child2Depth": 14,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 7,
          "child1Depth": 15,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 5,
          "parent2Depth": 9,
          "child1Depth": 7,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 17,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 7,
          "child1Depth": 11,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 9,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 9,
          "child1Depth": 11,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 7,
          "child1Depth": 11,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 7,
          "parent2Depth": 12,
          "child1Depth": 7,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 15,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 7,
          "parent2Depth": 11,
          "child1Depth": 5,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 7,
          "child1Depth": 12,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 20,
          "child1Depth": 11,
          "child2Depth": 20,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 9,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 13,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 13,
          "child1Depth": 12,
          "child2Depth": 13,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "PRogram",
          "actionType": "Mutation"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 17,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 8,
          "child1Depth": 12,
          "child2Depth": 6,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 20,
          "child1Depth": 12,
          "child2Depth": 20,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 20,
          "child1Depth": 11,
          "child2Depth": 20,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 16,
          "child1Depth": 16,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 14,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 7,
          "parent2Depth": 12,
          "child1Depth": 7,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 7,
          "parent2Depth": 12,
          "child1Depth": 7,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 7,
          "parent2Depth": 11,
          "child1Depth": 7,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 5,
          "parent2Depth": 20,
          "child1Depth": 8,
          "child2Depth": 17,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 7,
          "parent2Depth": 12,
          "child1Depth": 7,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 14,
          "child1Depth": 12,
          "child2Depth": 14,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 20,
          "parent2Depth": 12,
          "child1Depth": 20,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    },
    {
      "generationIndex": 2,
      "generationStartTime": "27/01/23 14:25:58.228",
      "generationCreationTime": 7,
      "generationEvaluationTime": 8,
      "gradingFunction": "target_1_1_D__0",
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        2.0,
        2.0,
        2.0,
        2.0,
        9.0,
        9.0,
        11.0,
        14.0,
        1.7976931348623157E+308,
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 43,
        "1": 47,
        "2": 4,
        "9": 2,
        "11": 1,
        "14": 1,
        "1.7976931348623157E+308": 1,
        "Infinity": 1
      },
      "populationDepths": [
        7,
        7,
        7,
        8,
        9,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        14,
        14,
        14,
        14,
        14,
        15,
        15,
        15,
        16,
        16,
        17,
        17,
        17,
        17,
        20,
        20,
        20,
        20,
        20,
        20
      ],
      "popDepthToUnits": {
        "7": 3,
        "8": 1,
        "9": 1,
        "10": 1,
        "11": 22,
        "12": 51,
        "13": 1,
        "14": 5,
        "15": 3,
        "16": 2,
        "17": 4,
        "20": 6
      },
      "actions": [
        {
          "count": 8,
          "actionType": "CopyZero"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 20,
          "parent2Depth": 12,
          "child1Depth": 15,
          "child2Depth": 16,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "PRogram",
          "actionType": "Mutation"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 7,
          "parent2Depth": 12,
          "child1Depth": 7,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Constant",
          "actionType": "Mutation"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 14,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 14,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 20,
          "parent2Depth": 11,
          "child1Depth": 20,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 7,
          "parent2Depth": 20,
          "child1Depth": 7,
          "child2Depth": 20,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 13,
          "parent2Depth": 12,
          "child1Depth": 13,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 7,
          "child1Depth": 11,
          "child2Depth": 7,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 17,
          "parent2Depth": 12,
          "child1Depth": 17,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 15,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 20,
          "child1Depth": 12,
          "child2Depth": 20,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 17,
          "parent2Depth": 12,
          "child1Depth": 17,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 17,
          "parent2Depth": 12,
          "child1Depth": 17,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 14,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 14,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 20,
          "child1Depth": 12,
          "child2Depth": 20,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 20,
          "parent2Depth": 12,
          "child1Depth": 20,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 15,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 20,
          "child1Depth": 11,
          "child2Depth": 20,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 14,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    },
    {
      "generationIndex": 3,
      "generationStartTime": "27/01/23 14:25:58.245",
      "generationCreationTime": 4,
      "generationEvaluationTime": 8,
      "gradingFunction": "target_1_1_D__0",
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        1.0,
        22.0,
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 92,
        "1": 6,
        "22": 1,
        "Infinity": 1
      },
      "populationDepths": [
        9,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        14,
        14,
        14,
        14,
        15,
        15,
        15,
        15,
        16,
        16,
        17,
        17,
        17,
        17,
        17,
        20
      ],
      "popDepthToUnits": {
        "9": 1,
        "10": 1,
        "11": 17,
        "12": 64,
        "13": 1,
        "14": 4,
        "15": 4,
        "16": 2,
        "17": 5,
        "20": 1
      },
      "actions": [
        {
          "count": 43,
          "actionType": "CopyZero"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 17,
          "child1Depth": 17,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 14,
          "parent2Depth": 12,
          "child1Depth": 15,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 16,
          "parent2Depth": 12,
          "child1Depth": 20,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 16,
          "child1Depth": 11,
          "child2Depth": 16,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 13,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 14,
          "parent2Depth": 11,
          "child1Depth": 15,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedType": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 14,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedType": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 15,
          "child1Depth": 12,
          "child2Depth": 15,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": " write((22 - (((15 / 19) + 20) + 0)));\n if (x_0 != read()){\n   x_0 = (((20 / 8) * 6) - x_0);\n   x_1 = (6 / (x_1 + (15 * 22)));\n   x_0 = (((x_0 + 6) - 4) + 21);\n   loop 4 {\n     loop 18 {\n       if (15 >= 12){\n         loop 14 {\n         }\n       }\n     }\n   }\n }\n x_1 = (19 - (7 + (read() - (x_1 / 22))));\n if (x_1 <= 8){\n   loop 5 {\n     loop 1 {\n       loop 1 {\n         if (19 < 6){\n         }\n       }\n     }\n     if (18 < 2){\n       x_2 = (2 * read());\n     }\n   }\n }\n"
    },
    {
      "generationIndex": -1,
      "generationStartTime": "27/01/23 14:25:58.258",
      "generationCreationTime": -1,
      "generationEvaluationTime": 17,
      "gradingFunction": "target_1_2_D__1",
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        1.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        2.0,
        6.0,
        22.0,
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 89,
        "1": 2,
        "2": 6,
        "6": 1,
        "22": 1,
        "Infinity": 1
      },
      "populationDepths": [
        9,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        14,
        14,
        14,
        14,
        15,
        15,
        15,
        15,
        16,
        16,
        17,
        17,
        17,
        17,
        17,
        20
      ],
      "popDepthToUnits": {
        "9": 1,
        "10": 1,
        "11": 17,
        "12": 64,
        "13": 1,
        "14": 4,
        "15": 4,
        "16": 2,
        "17": 5,
        "20": 1
      },
      "actions": [],
      "actionsToCount": {},
      "bestProgram": " write((22 - (((15 / 19) + 20) + 0)));\n if (x_0 != read()){\n   x_0 = (((20 / 8) * 6) - x_0);\n   x_1 = (6 / (x_1 + (15 * 22)));\n   x_0 = (((x_0 + 6) - 4) + 21);\n   loop 4 {\n     loop 18 {\n       if (15 >= 12){\n         loop 14 {\n         }\n       }\n     }\n   }\n }\n x_1 = (19 - (7 + (read() - (x_1 / 22))));\n if (x_1 <= 8){\n   loop 5 {\n     loop 1 {\n       loop 1 {\n         if (19 < 6){\n         }\n       }\n     }\n     if (18 < 2){\n       x_2 = (2 * read());\n     }\n   }\n }\n"
    }
  ],
  "totalEvolutionTime": "0:00:00.4877501",
  "totalActionsToCount": {}
}