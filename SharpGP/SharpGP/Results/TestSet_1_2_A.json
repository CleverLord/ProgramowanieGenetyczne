{
  "generations": [
    {
      "generationIndex": -1,
      "generationStartTime": "24/01/23 16:05:17.495",
      "generationCreationTime": 30,
      "generationEvaluationTime": 13186,
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        200.0,
        200.0,
        300.0,
        400.0,
        600.0,
        700.0,
        800.0,
        800.0,
        1500.0,
        1500.0,
        2000.0,
        3000.0,
        4000.0,
        8100.0,
        32900.0,
        161600.0,
        278100.0,
        2298700.0,
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 5,
        "100": 16,
        "200": 2,
        "300": 1,
        "400": 1,
        "600": 1,
        "700": 1,
        "800": 2,
        "1500": 2,
        "2000": 1,
        "3000": 1,
        "4000": 1,
        "8100": 1,
        "32900": 1,
        "161600": 1,
        "278100": 1,
        "2298700": 1,
        "Infinity": 61
      },
      "populationDepths": [
        7,
        7,
        7,
        7,
        7,
        8,
        8,
        8,
        9,
        9,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12
      ],
      "popDepthToUnits": {
        "7": 5,
        "8": 3,
        "9": 2,
        "10": 14,
        "11": 36,
        "12": 40
      },
      "actions": [],
      "actionsToCount": {},
      "bestProgram": " if (7 >= (x_1 * x_0)){\n   x_1 = (14 + (17 - (2 / 17)));\n   write((((17 / 1) + 11) / 23));\n   x_0 = (((13 * x_2) / x_2) - x_2);\n }\n x_0 = (x_3 + ((read() + (read() + 3)) - x_2));\n if ((8 - 12) < (18 * 16)){\n   if (x_4 <= 2){\n     loop 18 {\n       x_2 = (17 / 18);\n     }\n   }\n   loop 19 {\n     x_4 = (10 / (13 - 6));\n     loop 10 {\n       x_0 = (6 / 11);\n     }\n     if (23 > 13){\n       x_2 = (9 / 11);\n     }\n   }\n }\n x_0 = (9 / (5 / (16 + (8 / 13))));\n x_0 = ((((x_0 + 21) - 22) - read()) / 1);\n loop 0 {\n   x_5 = (1 / (4 + (18 / 1)));\n   x_0 = ((25 * (x_0 / 3)) - 17);\n   loop 6 {\n     loop 1 {\n       if (4 == 24){\n         if (3 < 11){\n         }\n       }\n     }\n   }\n   x_4 = (read() - ((x_1 - x_0) + 0));\n   if (17 <= x_5){\n     loop 0 {\n       loop 11 {\n         x_2 = x_1;\n       }\n     }\n   }\n }\n loop 16 {\n   loop 15 {\n     x_2 = (7 - (x_0 * 6));\n     write(((19 - x_4) - x_0));\n     x_1 = (16 * (13 - 5));\n     loop 1 {\n       loop 19 {\n         loop 21 {\n         }\n       }\n     }\n     x_6 = ((5 / 5) + 5);\n   }\n   write((14 / ((25 + 9) / 8)));\n }\n if (read() >= 23){\n   if (12 == 23){\n     x_5 = (x_4 * (read() + 15));\n     x_0 = (19 / (15 * 25));\n   }\n   x_0 = (7 + ((18 / 15) * 7));\n }\n loop 9 {\n   x_1 = (read() - (3 / (5 / read())));\n   if (x_7 == 2){\n     if (21 < x_1){\n       x_4 = (x_2 - 9);\n     }\n   }\n   loop 11 {\n     loop 8 {\n       loop 14 {\n         if (15 < 25){\n         }\n       }\n     }\n     x_1 = (5 / (7 + x_7));\n   }\n   if (7 >= 11){\n     loop 7 {\n       loop 20 {\n         if (2 >= 25){\n         }\n       }\n     }\n   }\n   x_4 = (21 - (11 * (x_2 / 21)));\n   if (read() < read()){\n     if (11 > x_1){\n       x_6 = (0 * 11);\n     }\n   }\n }\n if (x_0 == x_1){\n   x_1 = (((x_7 / 3) / x_1) - x_3);\n   loop 15 {\n     write(((9 + 2) + 1));\n     loop 14 {\n       loop 0 {\n         if (20 != 12){\n         }\n       }\n     }\n   }\n }\n loop 8 {\n   x_3 = (x_7 / ((read() / read()) / 24));\n   write((1 / (x_0 + (11 / read()))));\n   loop 11 {\n     if (x_5 < read()){\n       x_8 = (17 / 25);\n     }\n   }\n }\n"
    },
    {
      "generationIndex": 0,
      "generationStartTime": "24/01/23 16:05:30.713",
      "generationCreationTime": 7,
      "generationEvaluationTime": 35220,
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        200.0,
        200.0,
        200.0,
        200.0,
        300.0,
        700.0,
        800.0,
        1200.0,
        1300.0,
        1500.0,
        1500.0,
        2000.0,
        3800.0,
        4000.0,
        4000.0,
        32900.0,
        278100.0,
        278100.0,
        278100.0,
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 27,
        "100": 37,
        "200": 4,
        "300": 1,
        "700": 1,
        "800": 1,
        "1200": 1,
        "1300": 1,
        "1500": 2,
        "2000": 1,
        "3800": 1,
        "4000": 2,
        "32900": 1,
        "278100": 3,
        "Infinity": 18
      },
      "populationDepths": [
        7,
        7,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        9,
        9,
        9,
        9,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        10,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "popDepthToUnits": {
        "7": 2,
        "8": 8,
        "9": 4,
        "10": 10,
        "11": 23,
        "12": 49,
        "13": 1,
        "14": 1,
        "15": 1,
        "16": 1,
        "17": 1
      },
      "actions": [
        {
          "count": 5,
          "actionType": "CopyZero"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 10,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 10,
          "child1Depth": 8,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 8,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 10,
          "parent2Depth": 11,
          "child1Depth": 10,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 15,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 10,
          "parent2Depth": 11,
          "child1Depth": 10,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "PRogram",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 10,
          "parent2Depth": 12,
          "child1Depth": 10,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 9,
          "child1Depth": 12,
          "child2Depth": 9,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Constant",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 8,
          "child1Depth": 12,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Constant",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 8,
          "child1Depth": 12,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 12,
          "child1Depth": 9,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 7,
          "parent2Depth": 12,
          "child1Depth": 7,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 11,
          "child1Depth": 9,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 11,
          "child1Depth": 11,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 8,
          "child1Depth": 12,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 10,
          "child1Depth": 14,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 8,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 7,
          "child2Depth": 16,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 10,
          "parent2Depth": 11,
          "child1Depth": 10,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 17,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 10,
          "child1Depth": 12,
          "child2Depth": 10,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Constant",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 8,
          "parent2Depth": 12,
          "child1Depth": 8,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    },
    {
      "generationIndex": 1,
      "generationStartTime": "24/01/23 16:06:05.941",
      "generationCreationTime": 9,
      "generationEvaluationTime": 78388,
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        500.0,
        17500.0,
        "Infinity",
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 81,
        "100": 16,
        "500": 1,
        "17500": 1,
        "Infinity": 2
      },
      "populationDepths": [
        7,
        8,
        9,
        9,
        9,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        14,
        15,
        15,
        16
      ],
      "popDepthToUnits": {
        "7": 1,
        "8": 1,
        "9": 3,
        "11": 12,
        "12": 79,
        "13": 1,
        "14": 1,
        "15": 2,
        "16": 1
      },
      "actions": [
        {
          "count": 27,
          "actionType": "CopyZero"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 8,
          "child1Depth": 11,
          "child2Depth": 8,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 9,
          "parent2Depth": 12,
          "child1Depth": 9,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 12,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 15,
          "parent2Depth": 12,
          "child1Depth": 15,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 9,
          "parent2Depth": 12,
          "child1Depth": 9,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 14,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Variable",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "NestedExpression",
          "parent1Depth": 9,
          "parent2Depth": 12,
          "child1Depth": 9,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 16,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    },
    {
      "generationIndex": 2,
      "generationStartTime": "24/01/23 16:07:24.340",
      "generationCreationTime": 3,
      "generationEvaluationTime": 98089,
      "fitnesses": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        100.0,
        "Infinity"
      ],
      "fitnesToUnits": {
        "0": 99,
        "100": 1,
        "Infinity": 1
      },
      "populationDepths": [
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        13,
        14,
        15,
        15
      ],
      "popDepthToUnits": {
        "11": 8,
        "12": 89,
        "13": 1,
        "14": 1,
        "15": 2
      },
      "actions": [
        {
          "count": 81,
          "actionType": "CopyZero"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Assignment",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 11,
          "child1Depth": 13,
          "child2Depth": 11,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "mutatedGene": "Operator",
          "actionType": "Mutation"
        },
        {
          "mutatedGene": "Constant",
          "actionType": "Mutation"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 11,
          "parent2Depth": 12,
          "child1Depth": 11,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "IfStatement",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        },
        {
          "crossedGene": "Loop",
          "parent1Depth": 12,
          "parent2Depth": 12,
          "child1Depth": 12,
          "child2Depth": 12,
          "actionType": "Crossover"
        }
      ],
      "actionsToCount": {},
      "bestProgram": null
    }
  ],
  "totalEvolutionTime": "0:03:44.939178",
  "totalActionsToCount": {}
}